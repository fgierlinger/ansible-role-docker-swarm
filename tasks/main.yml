---
# tasks file for docker_swarm_info
- name: get swarm info
  docker_swarm_info:
  ignore_errors: yes
  changed_when: no
  register: _swarm_info

- name: Register primary node address
  set_fact:
    docker_swarm_addr: "{{ vars['ansible_'+docker_swarm_network_interface]['ipv4']['address'] }}"

- name: init swarm mode on the first manager
  docker_swarm:
    state: present
    advertise_addr: "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"
  when:
    - inventory_hostname == docker_swarm_primary_manager_name
  register: _master

- name: Register join tokens
  set_fact:
    docker_swarm_jointoken_worker: "{{ _master.swarm_facts.JoinTokens.Worker }}"
    docker_swarm_jointoken_manager: "{{ _master.swarm_facts.JoinTokens.Manager }}"
  when:
    - inventory_hostname == docker_swarm_primary_manager_name

- name: Join swarm as worker
  docker_swarm:
    state: join
    join_token: "{{ hostvars[docker_swarm_primary_manager_name].docker_swarm_jointoken_worker }}"
    advertise_addr: "{{ docker_swarm_addr }}"
    remote_addrs: "{{ hostvars[docker_swarm_primary_manager_name].docker_swarm_addr }}"
  when:
    - not _swarm_info.docker_swarm_active
    - inventory_hostname != docker_swarm_primary_manager_name
    - not docker_swarm_manager

- name: Join swarm as manager
  docker_swarm:
    state: join
    join_token: "{{ hostvars[docker_swarm_primary_manager_name].docker_swarm_jointoken_manager }}"
    advertise_addr: "{{ docker_swarm_addr }}"
    remote_addrs: "{{ hostvars[docker_swarm_primary_manager_name].docker_swarm_addr }}"
  when:
    - not _swarm_info.docker_swarm_manager
    - docker_swarm_manager
